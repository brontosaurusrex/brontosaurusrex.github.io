I"ç<p>Goal: Make a lowres object for <a href="https://kickstart.ch/pages/meshspin-js.html">meshspin.js</a>.</p>

<p>What to export from Blender? It appears that meshspin is operating on vertices and edges (no faces?).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import bpy

obdata = bpy.context.object.data

print('Vertices:')
for v in obdata.vertices:
    print('{}. {} {} {}'.format(v.index, v.co.x, v.co.y, v.co.z))

print('Edges:')
for e in obdata.edges:
    print('{}. {} {}'.format(e.index, e.vertices[0], e.vertices[1]))

print('Faces:')
for f in obdata.polygons:
    print('{}. '.format(f.index), end='')
    for v in f.vertices:
        print('{} '.format(v), end='')
    print() # for newline
</code></pre></div></div>

<p><a href="https://blender.stackexchange.com/questions/69881/vertices-coords-and-edges-exporting">In Python_console</a>, the problem is I can‚Äôt figure out how to log the console output and its history is lacking‚Ä¶</p>

<p>Edit, this might be the answer:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Preferences/System/Console Scrollback Lines
</code></pre></div></div>

<p>Question for you. What‚Äôs better than 256 console lines? Answer for you. 32768 console lines.</p>

<p>Meshspin example data:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var cube = {
    nodes: [
    {x:1, y: 1, z: -1},
    {x:1, y: -1, z: -1},
    {x:-1, y: -1, z: -1},
    {x:-1, y: 1, z: -1},
    {x:1, y: 1, z: 1},
    {x:1, y: -1, z: 1},
    {x:-1, y: -1, z: 1},
    {x:-1, y: 1, z: 1},
    ],
    edges: [[0,1], [0,3], [0,4], [0,2], [1,3], [1,5], [1,2], [2,3], [2,6], [3,7], [4,5], [4,7], [5,6], [6,7]],
};
var mesh = new MeshSpin();
mesh.figure(cube);
mesh.setup('wrapper');
mesh.run();
</code></pre></div></div>

<p>Reformating to get close to desired output:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import bpy
obdata = bpy.context.object.data

print('Vertices:')
for v in obdata.vertices:
    print('{}{}{}{}{}{}{}'.format('{x:', v.co.x, ',y:', v.co.y, ',z:', v.co.z, '},'))

print('Edges:')
for e in obdata.edges:
    print('{}{}{}{}{}'.format('[', e.vertices[0], ',', e.vertices[1], '],'), end =" ")
</code></pre></div></div>

<p>returns:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># points
{x:-0.8110758662223816,y:0.4698903560638428,z:2.2209718227386475},
{x:-0.544812798500061,y:-0.7124779224395752,z:1.0221654176712036},
{x:-0.0627538338303566,y:2.0761661529541016,z:1.7460660934448242},
{x:-0.08819231390953064,y:3.478560447692871,z:2.216146230697632},
{x:-0.2751067578792572,y:4.331906318664551,z:2.8761749267578125},
...
# edges    
[46,0], [78,1], [20,0], [2,14], [2,124], [2,56], [3,81], [48,125], [57,3], [126,49], [5,4], [50,61], [84,61], [60,5], [61,49], [67,1], [1,85], [51,15], [86,51], [51,85], [7,6], [9,8], [88,8], [87,8], [9,7], [1,10], [10,90], [91,90], [10,91]
...
</code></pre></div></div>

<p><a href="/meshspinBrex.htm">Putting it all together.</a></p>
<iframe scrolling="no" src="/meshspinBrex.htm" height="250" width="700" title="brex 3d" style="border:none; mix-blend-mode: multiply;"></iframe>

<p><small>Note that fake meshspin shading wont work, <br />since this object is not concave enough.</small></p>
:ET